{"version":3,"sources":["logo.svg","components/header/header.js","components/footer/footer.js","components/button/Button.js","components/tasks/AddTask.js","components/tasks/TaskCard.js","components/tasks/Task.js","components/About/About.js","components/tasks/tasks.js","App.js","reportWebVitals.js","index.js"],"names":["Header","useState","mode","setMode","className","src","logo","alt","onClick","Footer","Button","color","text","style","backgroundColor","defaultProps","AddTask","onAdd","setText","day","setDay","reminder","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","TaskCard","task","onDelete","onToggle","onDoubleClick","id","cursor","Task","tasksData","map","About","to","Tasks","showAddTask","setShowAddTask","setTasksData","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","deleteTask","method","filter","toggleReminder","taskToToogle","updatedTask","headers","body","JSON","stringify","addTask","path","exact","render","props","length","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3dddb55e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from \"react\";\r\nimport logo from '../../logo.svg';\r\nimport './style.scss';\r\nimport { FaMoon, FaSun} from 'react-icons/fa';\r\nfunction Header() {\r\n  const [mode, setMode] = useState('light');\r\n  const modeToggler = () => {\r\n    mode === 'light' ? setMode('dark') : setMode('light')\r\n}\r\n\r\n    return (\r\n        <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <h2 className=\"title\">Task Tracker</h2>\r\n        <div className=\"mode-icon\"  onClick={modeToggler} >\r\n       {mode === 'light' &&\r\n           <FaMoon/>\r\n          }\r\n        {mode === 'dark' &&\r\n          <FaSun />\r\n        }\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n  \r\n  export default Header;","function Footer() {\r\n    return (\r\n      <div>\r\n       Copyright &copy; 2021\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Footer;","import PropTypes from 'prop-types'\r\nconst Button = ({color, text, onClick}) => {\r\n    return (\r\n    <button style={{backgroundColor: color}}\r\n     onClick={onClick}\r\n    className=\"btn\">\r\n        {text}\r\n    </button>\r\n    )\r\n}\r\nButton.defaultProps = {\r\n    color: 'steelblue'\r\n}\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\nexport default Button\r\n","import React, {useState} from 'react'\r\n\r\nconst AddTask = ({onAdd}) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(!text){\r\n            alert('Task Empty');\r\n            return;\r\n        }\r\n        onAdd({text, day, reminder});\r\n        setText('')\r\n        setReminder(false)\r\n        setDay('')\r\n    }\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input type='text' placeholder='Add Task' value={text} onChange={(e) => setText(e.target.value)}/>\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Day & Time</label>\r\n                <input type='text' placeholder='Add Day & Time' value={day} onChange={(e) => setDay(e.target.value)}/>\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input type='checkbox' checked={reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)}/>\r\n            </div>\r\n            <input type='submit' value='Save Task' className='btn btn-block'/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import React from 'react'\r\nimport { FaTimes } from 'react-icons/fa'\r\nconst TaskCard = ({task , onDelete, onToggle}) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : ''}`}\r\n        onDoubleClick={() => onToggle(task.id)}>\r\n            <h3>\r\n                {task.text} \r\n                <FaTimes \r\n                style={{color: 'red', cursor: 'pointer'}} \r\n                onClick={()=> onDelete(task.id)}/>\r\n            </h3>\r\n            <p>{task.day}\r\n                {task.reminder}\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskCard\r\n","import TaskCard from './TaskCard'\r\nconst Task = ({tasksData, onDelete, onToggle}) => {\r\n    return (\r\n        <>\r\n            {tasksData.map((task)=>(\r\n                <TaskCard key={task.id} task={task} onDelete={onDelete} onToggle={onToggle} />\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import {Link} from 'react-router-dom'\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h4>Version 1.0.0</h4>\r\n            <Link to='/'>Go Back</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React, {useState, useEffect} from 'react'\r\nimport './taskStyle.scss';\r\nimport Button from '../button/Button';\r\nimport AddTask from './AddTask';\r\nimport { BrowserRouter as Router, Route} from 'react-router-dom'\r\nimport Task from './Task';\r\nimport About from '../About/About';\r\nimport {Link} from 'react-router-dom'\r\nfunction Tasks() {\r\n   // let location = useLocation()\r\n    const onClick = () => {\r\n        setShowAddTask(!showAddTask);\r\n    }\r\n    const [showAddTask, setShowAddTask] = useState(false);\r\n    const [tasksData, setTasksData] = useState([]);\r\n    useEffect(() => {\r\n       const getTasks = async () => {\r\n           const tasksFromServer = await fetchTasks()\r\n           setTasksData(tasksFromServer)\r\n       }\r\n\r\n       getTasks()\r\n    }, [])\r\n    const fetchTasks = async () => {\r\n        const res = await fetch('http://localhost:5000/tasks')\r\n        const data = await res.json()\r\n        return data\r\n    }\r\n    const fetchTask = async (id) => {\r\n        const res = await fetch(`http://localhost:5000/tasks/${id}`)\r\n        const data = await res.json()\r\n        return data\r\n    }\r\n        const deleteTask = async (id) => {\r\n            await fetch(`http://localhost:5000/tasks/${id}`,\r\n            {\r\n                method: 'DELETE',\r\n            })\r\n            setTasksData(tasksData.filter((task) => task.id !== id))\r\n        }\r\n\r\n        const toggleReminder = async (id) => {\r\n            const taskToToogle = await fetchTask(id)\r\n            const updatedTask = { ...taskToToogle, reminder: !taskToToogle.reminder}\r\n            const res = await fetch(`http://localhost:5000/tasks/${id}`,{\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-type': 'application/json'\r\n                },\r\n                body: JSON.stringify(updatedTask)\r\n            })\r\n            const data = await res.json()\r\n\r\n            setTasksData(tasksData.map((task) => \r\n            task.id === id ? {...task, reminder: data.reminder} : task\r\n            )\r\n            )\r\n        }\r\n\r\n        const addTask = async (task) => {\r\n            // const id = Math.floor(Math.random() * 10000) + 1\r\n            // const newTask = { id, ...task}\r\n            // setTasksData([...tasksData, newTask])\r\n            const res =  await fetch('http://localhost:5000/tasks',\r\n            {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-type': 'application/json'\r\n                },\r\n                body: JSON.stringify(task)\r\n            })\r\n            const data = await res.json()\r\n            setTasksData([...tasksData, data])\r\n        }\r\n    return (\r\n        <Router>\r\n        <div className=\"container\">\r\n        <header className='header'>\r\n            <h1>Task Tracker</h1>\r\n            {/* {location.pathname === '/' &&  */}\r\n                <Button color={showAddTask ? 'red' : 'green' }\r\n                text={showAddTask ? 'Close' : 'Add'}\r\n                onClick={onClick} />\r\n                {/* } */}\r\n        </header>\r\n        <Route path='/' exact render={(props)=>(\r\n            <>\r\n                {showAddTask && <AddTask onAdd={addTask}/> }\r\n                {tasksData.length > 0 ? (\r\n                <Task tasksData={tasksData} onDelete={deleteTask} onToggle={toggleReminder}/>\r\n                 ) : (\r\n                <h4>There is no tasks...</h4>\r\n                 )\r\n                }\r\n            </>\r\n        )} />\r\n        <Route path='/about' component={About} />\r\n        <hr />\r\n        <Link to='/about'>About</Link>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","\nimport './App.scss';\nimport Header from './components/header/header';\nimport Footer from './components/footer/footer';\nimport Tasks from './components/tasks/tasks';\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Tasks />\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}